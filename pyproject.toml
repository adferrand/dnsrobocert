[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dnsrobocert"
version = "3.25.0"
description = "A tool to manage your DNS-challenged TLS certificates"
license = "MIT"
keywords = [
    "dnsrobocert"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Unix", "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Utilities"
]
authors = [
    { name = "Adrien Ferrand", email = "ferrand.ad@gmail.com" },
]
readme = "README.rst"

requires-python = ">=3.9"
dependencies = [
    "acme>=2",
    "certbot>=2",
    "dns-lexicon[full]>=3.14.0",
    "cryptography>=2",
    "cffi>=1",
    "lxml>=4",
    "dnspython>=2.1.0",
    "jsonschema>=3",
    "pem>=20",
    "pyopenssl>=19",
    "pyyaml>=5",
    "schedule>=0",
    "coloredlogs>=14",
    "colorama>=0",
    "tldextract>=3",
]

[project.urls]
repository = "https://github.com/adferrand/dnsrobocert"
homepage = "https://adferrand.github.io/dnsrobocert/"

[project.scripts]
dnsrobocert = "dnsrobocert.core.main:main"

[dependency-groups]
dev = [
    "black",
    "flake8",
    "flake8-pyproject",
    "mypy",
    "packaging",
    "pytest",
    "pytest-cov",
    "pytest-sugar",
    "isort",
    "types-PyYAML",
    "types-pyOpenSSL",
    "types-requests",
    "types-setuptools",
]
doc = [
    "sphinx",
    "piccolo-theme",
    "toml"
]

[tool.pytest.ini_options]
junit_family = "xunit2"
addopts = "-p no:legacypath"

[tool.mypy]
show_error_codes = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "E231", "E221"]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
with_dev = true
commands = [[
    "pytest", "test", "--doctest-modules", "--junitxml=junit/test-results.xml",
]]

[tool.tox.env.cover]
commands = [[
    "pytest", "test", "--doctest-modules", "--junitxml=junit/test-results.xml",
    "--cov=dnsrobocert", "--cov-report=term-missing", "--cov-report=xml",
]]

[tool.tox.env.flake8]
commands = [[
    "flake8", "src", "test", "utils",
]]

[tool.tox.env.mypy]
commands = [[
    "mypy", "src",
]]
